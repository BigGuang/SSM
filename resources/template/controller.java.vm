package ${package.Controller};

    #set($Domain=${entity})
    #set($domain=${table.entityName.substring(0,1).toLowerCase()}+${table.entityName.substring(1,${table.entityName.length()})})
    #set($objName=${entity.substring(0,1).toLowerCase()}+${entity.substring(1,${entity.length()})})
    #set($SerivceObj=${table.serviceName})
    #set($serivceObj=${table.serviceName.substring(0,1).toLowerCase()}+${table.serviceName.substring(1,${table.serviceName.length()})})

import cn.waps.tools.security.MD5;
import cn.waps.utils.StringUtils;
import com.waps.utils.ResponseUtils;
import ${package.Entity}.${Domain};
import ${package.Service}.${SerivceObj};
import net.sf.json.JSONArray;
import net.sf.json.JSONObject;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletResponse;
import java.io.PrintWriter;
import java.util.*;


/**
 * <p>
 * ${table.comment}  前端控制器
 * </p>
 *
 * @author ${cfg.author}
 * @since ${date}
 */


@Controller
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/${domain}")
public class ${table.controllerName} {

    @Resource
    private ${SerivceObj} ${serivceObj};

    @RequestMapping(value="/save.do",method = RequestMethod.POST)
    public void save(${Domain} ${domain},HttpServletResponse response) throws Exception{
        if(StringUtils.isNull(${domain}.getId())){
            ${domain}.setId(new MD5().getMD5(UUID.randomUUID().toString()));
        }
        //todo:添加其他业务逻辑

        if(${serivceObj}.get${Domain}ById(${domain}.getId())==null){
            ${serivceObj}.add(${domain});
        }else{
            ${serivceObj}.update(${domain});
        }
        Map retMap=new HashMap();
        retMap.put("message","ok");
        JSONObject result=JSONObject.fromObject(retMap);
        //response返回结果
        ResponseUtils.write(response,result.toString());
    }

    @RequestMapping("/edit.do")
    public String edit(@RequestParam(value="id",required=true) String id,HttpServletResponse response) throws Exception{
        ${Domain} ${domain}=${serivceObj}.get${Domain}ById(id);
        //todo:添加其他业务逻辑


        JSONObject result=JSONObject.fromObject(${domain});
        //response返回结果
        ResponseUtils.write(response,result.toString());
        return null;
    }

    @RequestMapping("/del.do")
    public void del(@RequestParam(value="id",required=true) String id,HttpServletResponse response) throws Exception{
        int num=${serivceObj}.delete(id);
        //todo:添加其他业务逻辑


        Map retMap=new HashMap();
        retMap.put("message","ok");
        retMap.put("num",num);
        JSONObject result=JSONObject.fromObject(retMap);
        //response返回结果
        ResponseUtils.write(response,result.toString());
    }

    @RequestMapping("/list.do")
    public String list(@RequestParam(value="page",required=false) String page, @RequestParam(value="rows",required=false) String rows, HttpServletResponse response) throws Exception{
        List<${Domain}> objList=${serivceObj}.getAll();
        //todo:添加其他业务逻辑


        JSONObject result=new JSONObject();
        JSONArray jsonArray=JSONArray.fromObject(objList);
        result.put("draw", 1);
        result.put("recordsTotal", objList.size());
        result.put("recordsFiltered", objList.size());
        result.put("data", jsonArray);
        //response返回结果
        ResponseUtils.write(response,result.toString());
        return null;
    }
}
